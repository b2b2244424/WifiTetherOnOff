package com.example.android.appwidget;

import android.app.PendingIntent;
import android.app.Service;
import android.appwidget.AppWidgetManager;
import android.appwidget.AppWidgetProvider;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.os.IBinder;
import android.util.Log;
import android.widget.RemoteViews;
import android.net.wifi.WifiConfiguration;

public class SlideShow extends AppWidgetProvider {
	private static final String ACTION_MY_CLICK = "com.example.android.appwidget.SlideShow.ACTION_MY_CLICK";
	public static final String WIFI_AP_STATE_CHANGED_ACTION = "android.net.wifi.WIFI_AP_STATE_CHANGED";

    @Override
    public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {
    	Log.v("TEST", "@@@@@@@@@@@@@@@ onUpdate()");
//        wifiApManager = new WifiApManager(context);
        
//        final int N = appWidgetIds.length;
//        for (int i=0; i<N; i++) {
//            int appWidgetId = appWidgetIds[i];
//            updateAppWidget(context, appWidgetManager, appWidgetId);
//        }
        
        Intent serviceIntent = new Intent(context, MyService.class);
        context.startService(serviceIntent);
    }
    
    @Override
    public void onReceive(Context context, Intent intent) {
    	super.onReceive(context, intent);
    	Log.v("TEST", "@@@@@@@@@@@@@@@ onReceive()");
    	String action = intent.getAction();
    	if (WifiApManager.WIFI_AP_STATE_CHANGED_ACTION.equals(action)) {
    		int newApState = intent.getIntExtra(WifiApManager.EXTRA_WIFI_AP_STATE, WifiApManager.WIFI_AP_STATE_FAILED);
        	Log.v("TEST", "@@@@@@@@@@@@@@@ onReceive() AP CHANGE!! new state="+newApState);

        	boolean flg = false;
	        ComponentName thisWidget = new ComponentName(context, SlideShow.class);
	        AppWidgetManager manager = AppWidgetManager.getInstance(context);
	        RemoteViews remoteViews = new RemoteViews(context.getPackageName(), R.layout.slide_show);
        	
        	switch (newApState) {
            case WifiApManager.WIFI_AP_STATE_ENABLING:
            	flg = true;
    	        remoteViews.setImageViewResource(R.id.ImageView01, R.drawable.enabling);
                break;
            case WifiApManager.WIFI_AP_STATE_ENABLED:
            	flg = true;
    	        remoteViews.setImageViewResource(R.id.ImageView01, R.drawable.enabled);
                break;
            case WifiApManager.WIFI_AP_STATE_DISABLING:
                break;
            case WifiApManager.WIFI_AP_STATE_DISABLED:
            	flg = true;
    	        remoteViews.setImageViewResource(R.id.ImageView01, R.drawable.disabled);
                break;
            default:
                break;
        	}
        	if (flg) {
    	        Intent clickIntent = new Intent();
    	        clickIntent.setAction(ACTION_MY_CLICK);
    	        PendingIntent pendingIntent = PendingIntent.getService(context, 0, clickIntent, 0);
    	        remoteViews.setOnClickPendingIntent(R.id.ImageView01, pendingIntent);
    	        manager.updateAppWidget(thisWidget, remoteViews);
        	}
         }
    }

	public static class MyService extends Service {
	    @Override
	    public void onStart(Intent intent, int startId) {
	    	Log.v("TEST", "@@@@@@@@@@@@@@@ onStart() new WifiApManager");
	    	WifiApManager wifiApManager = new WifiApManager(this);
	    	Log.v("TEST", "@@@@@@@@@@@@@@@ onStart() call wifiApManager.getWifiApConfiguration()");
	        WifiConfiguration wifiConfig = wifiApManager.getWifiApConfiguration();
	    	Log.v("TEST", "@@@@@@@@@@@@@@@ onStart() called. ok");
	    	
	        ComponentName thisWidget = new ComponentName(this, SlideShow.class);
	        AppWidgetManager manager = AppWidgetManager.getInstance(this);
	        
	        RemoteViews remoteViews = new RemoteViews(getPackageName(), R.layout.slide_show);
	        boolean apState = wifiApManager.getWifiApState();
	        
	        if (ACTION_MY_CLICK.equals(intent.getAction())) {
	        	// click event
		        if (apState) {
			        remoteViews.setImageViewResource(R.id.ImageView01, R.drawable.disabled);
		            wifiApManager.setWifiApEnabled(wifiConfig, false);
		        } else {
			        remoteViews.setImageViewResource(R.id.ImageView01, R.drawable.enabled);
		            wifiApManager.setWifiApEnabled(wifiConfig, true);
		        }
	        } else {
		        if (apState) {
			        remoteViews.setImageViewResource(R.id.ImageView01, R.drawable.enabled);
		        } else {
			        remoteViews.setImageViewResource(R.id.ImageView01, R.drawable.disabled);
		        }
	        }
	        Intent clickIntent = new Intent();
	        clickIntent.setAction(ACTION_MY_CLICK);
	        PendingIntent pendingIntent = PendingIntent.getService(this, 0, clickIntent, 0);
	        
	        remoteViews.setOnClickPendingIntent(R.id.ImageView01, pendingIntent);
	        
	        manager.updateAppWidget(thisWidget, remoteViews);
	    }

	    @Override
	    public IBinder onBind(Intent intent) {
	        return null;
	    }
	}
}
